{"version":3,"file":"js/bootstrap-nice-select.js","mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;UCVA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ACNA,4CAAe;AACf;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,QAAQ;AACvB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;;AC/CA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,YAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClB3B;AACA;AACA;AACA;;AAEA,MAAM,wCAAY;AAClB;AACA;;AAEA,wCAAY,oBAAoB,wCAAY;AAC5C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,kEAAe,wCAAY;;AClBW;;AAEtC;;AAEA,yBAAyB,yBAAyB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAA2D;AACD;AACA;AACD;AACA;AACE;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE1D;AACA,sBAAsB,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAG,EAAE,2BAAG,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE,EAAE,2BAAE;AAC1G;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gDAAe;AACf;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AClK4C;AACC;AACR;;AAErC;AACA;AACA;AACO,MAAM,8BAAQ,iBAAiB,kBAAkB;;AAExD;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,aAAa,QAAQ;AACrB;AACO;;AAEP;AACA;AACA;AACA,UAAU;AACV,6BAA6B,2BAA2B;AACxD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA,gCAAgC,0CAA0C;AAC1E;AACA,kCAAkC,8CAA8C;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,+CAA+C;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,4BAA4B;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE,6BAA6B;AACtG;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0HAA0H,gBAAgB;AAC1I;AACA;AACA;AACA;AACA,iJAAiJ,sBAAsB;AACvK;AACA;AACA,sBAAsB;AACtB;AACA,mDAAmD,iDAAiD;AACpG;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA,wCAAwC,+CAA+C;;AAEvF;AACA,6CAA6C,4CAA4C;AACzF;AACA;;AAEA;AACA,oCAAoC,wCAAwC;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,4CAA4C;AAC9E,uJAAuJ,eAAe;AACtK;AACA;;AAEA;AACA,4DAA4D,6BAA6B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sBAAsB;AACtB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,+CAA+C,iDAAiD;AAChG;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;;AAEA;AACA,mCAAmC,+CAA+C;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,+CAA+C;;AAEnF;AACA,gCAAgC,qCAAqC;AACrE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA,8BAA8B,yCAAyC;AACvE,6IAA6I,eAAe;AAC5J;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,gCAAgC,oBAAoB;AACpD;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,iGAAiG,SAAS;AAC1G;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,+HAA+H,SAAS;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,4CAA4C;;AAEpF;AACA,oCAAoC,mDAAmD;AACvF;;AAEA;AACA,gCAAgC,2CAA2C;;AAE3E;AACA,4CAA4C,8CAA8C;AAC1F;AACA,oCAAoC,sCAAsC;AAC1E,yJAAyJ,eAAe;AACxK;AACA;AACA,gDAAgD,sBAAsB;AACtE;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qCAAqC,mCAAmC;AACxE,oJAAoJ,eAAe;AACnK;AACA;AACA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA,iCAAiC,yCAAyC;AAC1E;AACA;AACA,4BAA4B,oCAAoC;AAChE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+CAA+C,8BAAQ;;AAEvD;AACA;AACA;;AAEA;AACA;AACA,0BAA0B,yCAAyC;AACnE;AACA;;AAEA;AACA,4BAA4B,wCAAwC;AACpE;;AAEA;AACA,+BAA+B,2CAA2C;AAC1E;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,wCAAwC,4BAA4B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,OAAO;AACpF;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,8HAA8H,OAAO;AACrI;AACA;AACA;AACA;AACA,qJAAqJ,aAAa;AAClK;AACA;AACA,0BAA0B;AAC1B;AACA,uDAAuD,iDAAiD;AACxG;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kJAAkJ,IAAI;AACtJ;AACA,0EAA0E,IAAI;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,6EAA6E,gBAAgB;AAC7F;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8HAA8H,gBAAgB;AAC9I;AACA;AACA;AACA;AACA,qJAAqJ,sBAAsB;AAC3K;AACA;AACA,0BAA0B;AAC1B;AACA,uDAAuD,iDAAiD;AACxG;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB,0BAA0B;AAC9C,wEAAwE,EAAE;AAC1E,8DAA8D,EAAE;AAChE;AACA,CAAC","sources":["webpack://bootstrapNiceSelect/webpack/universalModuleDefinition","webpack://bootstrapNiceSelect/webpack/bootstrap","webpack://bootstrapNiceSelect/webpack/runtime/define property getters","webpack://bootstrapNiceSelect/webpack/runtime/hasOwnProperty shorthand","webpack://bootstrapNiceSelect/webpack/runtime/make namespace object","webpack://bootstrapNiceSelect/./src/js/utils/index.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-af-ZA.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-ar-SA.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-bg-BG.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-ca-ES.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-cs-CZ.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-de-DE.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-en-US.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-es-ES.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-et-EE.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-fa-IR.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-fi-FI.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-fr-FR.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-it-IT.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-ja-JP.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-nl-NL.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-pl-PL.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-pt-PT.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-ro-RO.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-ru-RU.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-tr-TR.js","webpack://bootstrapNiceSelect/./src/js/locale/bootstrap-nice-select-zh-CN.js","webpack://bootstrapNiceSelect/./src/js/constants/index.js","webpack://bootstrapNiceSelect/./src/js/bootstrap-nice-select.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"bootstrapNiceSelect\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"bootstrapNiceSelect\"] = factory();\n\telse\n\t\troot[\"bootstrapNiceSelect\"] = factory();\n})(this, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default {\n    /**\n     * Create HTML single Element from string input\n     * @param {String} html representing a single element\n     * @return {Element}\n     */\n    htmlToElement(html) {\n        var template = document.createElement('template');\n        html = html.trim();\n        template.innerHTML = html;\n        return template.content.firstChild;\n    },\n    /**\n     * Create HTML nested Element from string input  \n     * @param {String} html representing any number of sibling elements\n     * @return {NodeList} \n     */\n    htmlToElements(html) {\n        var template = document.createElement('template');\n        html = html.trim();\n        template.innerHTML = html;\n        return template.content.childNodes;\n    },\n    /**\n     * Get current loaded Bootstrap Major version from project\n     * @returns {String}\n     */\n    getBootstrapVersion() {\n        let semVersion = typeof bootstrap === 'undefined' ? $().tooltip.Constructor.VERSION.split(\".\") : bootstrap.Tooltip.VERSION.split(\".\");\n        let majorVersion = semVersion[0];\n        return majorVersion;\n    },\n    /**\n     * Executes a given function by name with params\n     * @param {string} functionName \n     * @param {Object} context \n     * @returns Return value of the called function\n     */\n    executeFunctionByName(functionName, context /*, args */) {\n        let args = Array.prototype.slice.call(arguments, 2);\n        let namespaces = functionName.split(\".\");\n        let funcName = namespaces.pop();\n        for (let i = 0; i < namespaces.length; i++) {\n            context = context[namespaces[i]];\n        }\n        return context[funcName].apply(context, args);\n    }\n}","/*\n *  Bootstrap Nice Select Afrikaans (South Africa) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['af-ZA'] = localisation.locales['af'] = {\n    formatSearch() {\n        return \"Soek tans...\";\n    },\n    formatHelpForTagging() {\n        return \"Om eie etikette te skep, fokus die invoerveld en druk dan 'Enter' of ',' of 'Spasiebalk' om dit by die lys te voeg\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Arabic (Saudi Arabia) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['ar-SA'] = localisation.locales['ar'] = {\n    formatSearch() {\n        return \"يبحث...\";\n    },\n    formatHelpForTagging() {\n        return 'لإنشاء علامات خاصة ، ركز على حقل الإدخال ثم اضغط على \"إدخال\" أو \"مفتاح المسافة\" لإضافته إلى القائمة';\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Bulgarian (Bulgaria) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['bg-BG'] = localisation.locales['bg'] = {\n    formatSearch() {\n        return \"Търсене...\";\n    },\n    formatHelpForTagging() {\n        return \"3a създаване на собствени тагове фокусирайте полето за въвеждане и след това натиснете 'Enter' или ',' или 'Интервал', за да ro добавите към списъка\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Catalan (Spain) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['ca-ES'] = localisation.locales['ca'] = {\n    formatSearch() {\n        return \"Buscant...\";\n    },\n    formatHelpForTagging() {\n        return \"Per crear etiquetes pròpies, centreu el camp d'entrada i premeu 'Enter' o ',' o 'Barra espaiadora' per afegir-lo a la llista\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Czech (Czech Republic) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['cs-CZ'] = localisation.locales['cs'] = {\n    formatSearch() {\n        return \"Hledání...\";\n    },\n    formatHelpForTagging() {\n        return \"Chcete-li vytvořit vlastní tagy, zaměřte se na vstupní pole a poté stiskněte 'Enter' nebo ',' nebo 'Mezerník' pro přidání do seznamu\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select German (Germany) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['de-DE'] = localisation.locales['de'] = {\n    formatSearch() {\n        return \"Suchen...\";\n    },\n    formatHelpForTagging() {\n        return \"Um eigene Tags zu erstellen, fokussieren Sie das Input-Feld und klicken nach ihrer Eingabe 'Enter' oder ',' oder 'Leertaste' um das Objekt zu erstellen\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select English (United States) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['en-US'] = localisation.locales['en'] = {\n    formatSearch() {\n        return \"Searching...\";\n    },\n    formatHelpForTagging() {\n        return \"For creating own tags, focus the input field and then press 'Enter' or ',' or 'Spacebar' to add it to the list\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Spanish (Spain, International Sort) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['es-ES'] = localisation.locales['es'] = {\n    formatSearch() {\n        return \"Buscando...\";\n    },\n    formatHelpForTagging() {\n        return \"Para crear etiquetas propias, enfoque el campo de entrada y luego presione 'Entrar' o ',' o 'Barra espaciadora' para agregarlo a la lista\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Estonian (Estonia) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['et-EE'] = localisation.locales['et'] = {\n    formatSearch() {\n        return \"Otsimine...\";\n    },\n    formatHelpForTagging() {\n        return \"Enda siltide loomiseks fokusseerige sisestusväli ja vajutage selle loendisse lisamiseks sisestusklahvi või ',' või tühikuklahvi\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Persian (Iran) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['fa-IR'] = localisation.locales['fa'] = {\n    formatSearch() {\n        return \"جستجوکردن...\";\n    },\n    formatHelpForTagging() {\n        return \"برای ایجاد تگ های خود، فیلد ورودی را متمرکز کنید و سپس 'Enter' یا ',' ، یا 'Spacebar' را فشار دهید تا آن را به لیست اضافه کنید.\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Finnish (Finland) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['fi-FI'] = localisation.locales['fi'] = {\n    formatSearch() {\n        return \"Etsiminen...\";\n    },\n    formatHelpForTagging() {\n        return \"Luodaksesi omia tunnisteita, tarkenna syöttökenttä ja lisää se luetteloon painamalla Enter tai ',' tai 'Välilyönti'\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select French (France) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['fr-FR'] = localisation.locales['fr'] = {\n    formatSearch() {\n        return \"Recherche...\";\n    },\n    formatHelpForTagging() {\n        return \"Pour créer vos propres balises, concentrez le champ de saisie, puis appuyez sur 'Entrée' ou ',' ou 'Barre d'espacement' pour l'ajouter à la liste\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Italian (Italy) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['it-IT'] = localisation.locales['it'] = {\n    formatSearch() {\n        return \"Ricerca...\";\n    },\n    formatHelpForTagging() {\n        return \"Per creare i propri tag, focalizzare il campo di input e quindi premere 'Invio' o ',' o 'Barra spaziatrice' per aggiungerlo all'elenco\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Japanese (Japan) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['ja-JP'] = localisation.locales['ja'] = {\n    formatSearch() {\n        return \"検索中...\";\n    },\n    formatHelpForTagging() {\n        return \"独自のタグを作成するには、入力フィールドにフォーカスし、「Enter」または「,」または「スペースバー」を押してリストに追加します。\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Dutch (Netherlands) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['nl-NL'] = localisation.locales['nl'] = {\n    formatSearch() {\n        return \"Zoeken...\";\n    },\n    formatHelpForTagging() {\n        return \"Voor het maken van eigen tags, focus het invoerveld en druk op 'Enter' of ',' of 'Spatiebalk' om het aan de lijst toe te voegen\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Polish (Poland) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['pl-PL'] = localisation.locales['pl'] = {\n    formatSearch() {\n        return \"Badawczy...\";\n    },\n    formatHelpForTagging() {\n        return \"Aby utworzyć własne tagi, zaznacz pole wprowadzania, a następnie naciśnij 'Enter' lub ',' lub 'Spacja', aby dodać je do listy\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Portuguese (Portugal) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['pt-PT'] = localisation.locales['pt'] = {\n    formatSearch() {\n        return \"Procurando...\";\n    },\n    formatHelpForTagging() {\n        return \"Para criar tags próprias, foque o campo de entrada e pressione 'Enter' ou ',' ou 'Barra de espaço' para adicioná-lo à lista\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Romanian (Romania) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['ro-RO'] = localisation.locales['ro'] = {\n    formatSearch() {\n        return \"In cautarea...\";\n    },\n    formatHelpForTagging() {\n        return \"Pentru a crea propriile etichete, focalizați câmpul de introducere și apoi apăsați 'Enter' sau ',' sau 'bara de spațiu' pentru a-l adăuga la listă\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Russian (Russia) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['ru-RU'] = localisation.locales['ru'] = {\n    formatSearch() {\n        return \"Идет поиск...\";\n    },\n    formatHelpForTagging() {\n        return \"Для создания собственных тегов сфокусируйте поле ввода, a затем нажмите 'Ввод', ',' или 'Пробел', чтобы добавить ero в список.\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Turkish (Turkey) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['tr-TR'] = localisation.locales['tr'] = {\n    formatSearch() {\n        return \"Aranıyor...\";\n    },\n    formatHelpForTagging() {\n        return \"Kendi etiketlerinizi oluşturmak için giriş alanına odaklanın ve ardından listeye eklemek için 'Enter' veya ',' veya 'Boşluk Çubuğu'na basın\";\n    }\n}\n\nexport default localisation;","/*\n *  Bootstrap Nice Select Chinese (Simplified, People's Republic of China) Translation\n *  Author: Kevin Gostomski <kevingostomski2001@gmail.com> \n*/\n\nconst localisation = {\n    locales: []\n}\n\nlocalisation.locales['zh-ZN'] = localisation.locales['zh'] = {\n    formatSearch() {\n        return \"搜索中...\";\n    },\n    formatHelpForTagging() {\n        return \"要创建自己的标签，请聚焦输入字段，然后按'Enter'或','或“空格键”将其添加到列表中\";\n    }\n}\n\nexport default localisation;","import Utils from \"../utils/index.js\";\n\nconst VERSION = \"1.1.0\";\n\nconst bootstrapVersion = Utils.getBootstrapVersion();\n\nconst CONSTANTS = {\n    4: {\n        classes: {\n            mainContainer: ['bootstrap-nice-select', 'col'],\n            deleteContainer: ['row-12', 'mt-3'],\n            deleteContainerHeader: ['my-3'],\n            deleteContainerList: [\"list-group\", \"list-group-flush\", \"delete-list\", \"w-100\"],\n            deleteButtonWrapper: [\"d-flex\", \"flex-row\", \"justify-content-between\", \"align-items-center\"],\n            deleteButtonText: [\"m-0\", \"px-3\", \"optText\", \"text-truncate\"],\n            deleteButton: ['d-flex', 'align-items-center', 'btn', 'delete'],\n            deleteButtonIcon: [\"icon\"],\n            addContainer: ['row-12', 'mt-3'],\n            addContainerWrapper: [\"d-flex\", \"flex-row\", \"justify-content-end\", \"align-items-center\"],\n            addButton: ['d-flex', 'align-items-center', 'btn', 'add'],\n            addbuttonIcon: ['icon'],\n            overlayContainer: ['bootstrap-nice-select-overlay'],\n            overlayContainerWrapper: [\"h-100\", \"bootstrap-nice-select-closer\"],\n            searchContainer: [\"search-container\"],\n            searchInputWrapper: [\"d-flex\", \"flex-row\", \"justify-content-start\", \"align-items-center\", \"p-3\"],\n            searchIcon: ['icon'],\n            searchInput: ['w-100'],\n            searchHr: ['hr'],\n            searchHrFocus: ['focus-border'],\n            searchListItem: [\"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"],\n            searchListItemText: [\"text-truncate\"],\n            searchListItemBadge: [\"badge\", \"badge-pill\"],\n            tagIcon: [\"icon\", \"icon-tag\"]\n        }\n    },\n    5: {\n        classes: {\n            mainContainer: ['bootstrap-nice-select', 'col'],\n            deleteContainer: ['row-12', 'mt-3'],\n            deleteContainerHeader: ['my-3'],\n            deleteContainerList: [\"list-group\", \"list-group-flush\", \"delete-list\", \"w-100\"],\n            deleteButtonWrapper: [\"d-flex\", \"flex-row\", \"justify-content-between\", \"align-items-center\"],\n            deleteButtonText: [\"m-0\", \"px-3\", \"optText\", \"text-truncate\"],\n            deleteButton: ['d-flex', 'align-items-center', 'btn', 'delete', \"my-1\"],\n            deleteButtonIcon: [\"icon\"],\n            addContainer: ['row-12', 'mt-3'],\n            addContainerWrapper: [\"d-flex\", \"flex-row\", \"justify-content-end\", \"align-items-center\"],\n            addButton: ['d-flex', 'align-items-center', 'btn', 'add'],\n            addbuttonIcon: ['icon'],\n            overlayContainer: ['bootstrap-nice-select-overlay'],\n            overlayContainerWrapper: [\"h-100\", \"bootstrap-nice-select-closer\"],\n            searchContainer: [\"search-container\"],\n            searchInputWrapper: [\"d-flex\", \"flex-row\", \"justify-content-start\", \"align-items-center\", \"p-3\"],\n            searchIcon: ['icon'],\n            searchInput: ['w-100'],\n            searchHr: ['hr'],\n            searchHrFocus: ['focus-border'],\n            searchListItem: [\"list-group-item\", \"d-flex\", \"justify-content-between\", \"align-items-center\"],\n            searchListItemText: [\"text-truncate\"],\n            searchListItemBadge: [\"badge\", \"rounded-pill\"],\n            tagIcon: [\"icon\", \"icon-tag\"]\n        }\n    }\n}[bootstrapVersion]\n\nconst LOCALISATION = {\n}\nimport af from \"..//locale/bootstrap-nice-select-af-ZA.js\";\nimport ar from \"../locale/bootstrap-nice-select-ar-SA.js\";\nimport bg from \"../locale/bootstrap-nice-select-bg-BG.js\";\nimport ca from \"../locale/bootstrap-nice-select-ca-ES.js\"\nimport cs from \"../locale/bootstrap-nice-select-cs-CZ.js\"\nimport ger from \"../locale/bootstrap-nice-select-de-DE.js\";\nimport eng from \"../locale/bootstrap-nice-select-en-US.js\";\nimport es from \"../locale/bootstrap-nice-select-es-ES.js\";\nimport et from \"../locale/bootstrap-nice-select-et-EE.js\";\nimport fa from \"../locale/bootstrap-nice-select-fa-IR.js\";\nimport fi from \"../locale/bootstrap-nice-select-fi-FI.js\";\nimport fr from \"../locale/bootstrap-nice-select-fr-FR.js\";\nimport it from \"../locale/bootstrap-nice-select-it-IT.js\";\nimport ja from \"../locale/bootstrap-nice-select-ja-JP.js\";\nimport nl from \"../locale/bootstrap-nice-select-nl-NL.js\";\nimport pl from \"../locale/bootstrap-nice-select-pl-PL.js\";\nimport pt from \"../locale/bootstrap-nice-select-pt-PT.js\";\nimport ro from \"../locale/bootstrap-nice-select-ro-RO.js\";\nimport ru from \"../locale/bootstrap-nice-select-ru-RU.js\";\nimport tr from \"../locale/bootstrap-nice-select-tr-TR.js\";\nimport zh from \"../locale/bootstrap-nice-select-zh-CN.js\";\n\nfunction initAvailableLocales() {\n    for (let lang of [af, ar, bg, ca, cs, ger, eng, es, et, fa, fi, fr, it, ja, nl, pl, pt, ro, ru, tr, zh]) {\n        for (let [key, value] of Object.entries(lang.locales)) {\n            LOCALISATION[key] = value;\n        }\n    }\n}\ninitAvailableLocales();\n\nconst DEFAULTS = {\n    animation: true,\n    multiple: false,\n    disabled: false,\n    searchData: undefined,\n    tags: false,\n    tokenSeparators: [',', ' ', 'Enter'],\n    locale: \"en-US\",\n    theme: 'font-awesome-6',\n    scrollable: {\n        on: false,\n        height: undefined\n    }\n}\n\nconst ICONS = {\n    glyphicon: {\n        search: '<span class=\"glyphicon glyphicon-search\"></span>',\n        delete: '<span class=\"glyphicon glyphicon-trash\"></span>',\n        add: '<span class=\"glyphicon glyphicon-plus\"></span>',\n        tag: '<span class=\"glyphicon glyphicon-exclamation-sign\"></span>'\n    },\n    'font-awesome-6': {\n        search: '<i class=\"fa-solid fa-magnifying-glass\"></i>',\n        delete: '<i class=\"fa-solid fa-trash\"></i>',\n        add: '<i class=\"fa-solid fa-plus\"></i>',\n        tag: '<i class=\"fa-solid fa-circle-exclamation\"></i>'\n    },\n    'font-awesome-5': {\n        search: '<i class=\"fas fa-search\"></i>',\n        delete: '<i class=\"fas fa-trash\"></i>',\n        add: '<i class=\"fas fa-plus\"></i>',\n        tag: '<i class=\"fas fa-exclamation-circle\"></i>'\n    },\n    'font-awesome-4': {\n        search: '<i class=\"fa fa-search\"></i>',\n        delete: '<i class=\"fa fa-trash\"></i>',\n        add: '<i class=\"fa fa-plus\"></i>',\n        tag: '<i class=\"fa fa-exclamation-circle\"></i>'\n    },\n    'material-icons': {\n        search: '<i class=\"material-icons\">search</i>',\n        delete: '<i class=\"material-icons\">delete</i>',\n        add: '<i class=\"material-icons\">add</i>',\n        tag: '<i class=\"material-icons\">priority_high</i>'\n    },\n    'bi': {\n        search: '<i class=\"bi bi-search\"></i>',\n        delete: '<i class=\"bi bi-trash\"></i>',\n        add: '<i class=\"bi bi-plus\"></i>',\n        tag: '<i class=\"bi bi-exclamation-circle\"></i>'\n    }\n}\n\nexport default {\n    VERSION,\n\n    CONSTANTS,\n\n    LOCALISATION,\n\n    DEFAULTS,\n\n    ICONS\n}","import \"../scss/bootstrap-nice-select.scss\";\nimport Constants from \"./constants/index.js\";\nimport Utils from \"./utils/index.js\";\n\n/**\n * Needed to set globally options for multiple creation of BootstrapNiceSelect\n */\nexport const DEFAULTS = Object.create(Constants.DEFAULTS);\n\n/**\n * Initialize select field\n * @param {string} selector Query selector for initialization  \n * @param {Object} options Set options for creation for only this selected select field\n * @returns {Object} Specific object prototype with methods and properties\n */\nexport const BootstrapNiceSelect = function (selector, options) {\n\n    function getRemoteSearchData(filter) {\n        if (_bootstrapNiceSelect['searchData'] instanceof Function || typeof _bootstrapNiceSelect['searchData'] === 'function') {\n            _searchData = _bootstrapNiceSelect['searchData'](filter);\n        } else {\n            let remoteData = Utils.executeFunctionByName(_bootstrapNiceSelect['searchData'], window, filter);\n            _searchData = remoteData;\n        }\n    }\n\n    function refreshSearchList() {\n        let searchUl = _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay div.search-container ul\");\n        searchUl.innerHTML = \"\";\n        for (let searchOption of _searchData.items) {\n\n            const afterAdd = new CustomEvent(\"inserted.bs.bootstrap-nice-select\", {\n                detail: {\n                    key: searchOption.id,\n                    value: searchOption.text\n                }\n            });\n\n            let li = document.createElement(\"li\");\n            li.classList.add(...Constants.CONSTANTS.classes.searchListItem);\n            let text = document.createElement(\"span\");\n            text.classList.add(...Constants.CONSTANTS.classes.searchListItemText);\n            text.innerHTML = searchOption.text;\n            li.appendChild(text);\n            li.tabIndex = -1;\n            li.setAttribute(\"data-id\", searchOption.id);\n            if (searchOption.optGroup) {\n                let badge = document.createElement(\"span\");\n                badge.classList.add(...Constants.CONSTANTS.classes.searchListItemBadge);\n                badge.innerText = searchOption.optGroup;\n                li.appendChild(badge);\n            }\n            li.addEventListener('click', function () {\n                if (!_bootstrapNiceSelect.multiple) {\n                    let deleteLiElements = _selectField.nextElementSibling.querySelector('.bootstrap-nice-select ul.delete-list').getElementsByTagName(\"li\");\n                    for (let i = 0; (li = deleteLiElements[i]); i++) {\n                        li.parentNode.removeChild(li);\n                    }\n                    let oldSelectedOption = _selectField.querySelector('option[selected=\"selected\"]');\n                    if (oldSelectedOption) {\n                        oldSelectedOption.removeAttribute(\"selected\");\n                    }\n                }\n                let option = _selectField.querySelector(`option[value=\"${this.getAttribute(\"data-id\")}\"]`);\n                if (option) {\n                    option.setAttribute(\"selected\", \"selected\");\n                } else {\n                    let newOption = document.createElement(\"option\");\n                    newOption.value = searchOption.id;\n                    newOption.innerText = searchOption.text;\n                    newOption.setAttribute(\"selected\", \"selected\");\n                    _selectField.appendChild(newOption);\n                }\n                if (_bootstrapNiceSelect.searchData === undefined) {\n                    _searchData.items = _searchData.items.filter(data => data.id !== this.getAttribute(\"data-id\"));\n                }\n                _selectField.nextElementSibling.querySelector('.bootstrap-nice-select-overlay').classList.remove(\"active\");\n                this.parentNode.classList.remove(\"active\");\n                if (_selectField.nextElementSibling.querySelector(`.bootstrap-nice-select ul.delete-list button[data-id=${searchOption.id}]`)) {\n                    return;\n                }\n                if (searchOption.optGroup) {\n                    let deleteButton = createDeleteButton(searchOption.id, searchOption.text, searchOption.optGroup, (searchOption.disabled) ? searchOption.disabled : false);\n                    let selectedHeader = _selectField.nextElementSibling.querySelector(`.bootstrap-nice-select ul.delete-list h5[data-optgroup=${searchOption.optGroup}]`);\n                    if (selectedHeader) {\n                        selectedHeader.insertAdjacentElement('afterend', deleteButton);\n                    } else {\n                        let newHeader = document.createElement(\"h5\");\n                        newHeader.classList.add(...Constants.CONSTANTS.classes.deleteContainerHeader);\n                        newHeader.innerHTML = searchOption.optGroup;\n                        newHeader.setAttribute(\"data-optgroup\", searchOption.optGroup);\n                        _selectField.nextElementSibling.querySelector('.bootstrap-nice-select ul.delete-list').appendChild(newHeader);\n                        _selectField.nextElementSibling.querySelector('.bootstrap-nice-select ul.delete-list').appendChild(deleteButton);\n                    }\n                } else {\n                    let deleteButton = createDeleteButton(searchOption.id, searchOption.text, undefined, (searchOption.disabled) ? searchOption.disabled : false);\n                    _selectField.nextElementSibling.querySelector('.bootstrap-nice-select ul.delete-list').appendChild(deleteButton);\n                }\n                _selectField.dispatchEvent(afterAdd);\n            });\n            li.addEventListener('keydown', function (event) {\n                event.preventDefault();\n                let liElements = _selectField.nextElementSibling.querySelectorAll(\".bootstrap-nice-select-overlay div.search-container ul li:not(.hidden)\");\n                if (_bootstrapNiceSelect.searchData !== undefined) {\n                    liElements = _selectField.nextElementSibling.querySelectorAll(\".bootstrap-nice-select-overlay div.search-container ul li\");\n                }\n                if (event.key === \"ArrowDown\") {\n                    if (_currentLi + 1 >= liElements.length) {\n                        _currentLi = 0;\n                    } else {\n                        _currentLi++;\n                    }\n                    liElements[_currentLi].tabIndex = 0;\n                    liElements[_currentLi].focus();\n                    this.tabIndex = -1;\n                }\n                if (event.key === \"ArrowUp\") {\n                    if (_currentLi - 1 < 0) {\n                        _currentLi = liElements.length - 1;\n                    } else {\n                        _currentLi--;\n                    }\n                    liElements[_currentLi].tabIndex = 0;\n                    liElements[_currentLi].focus();\n                    this.tabIndex = -1;\n                }\n                if (event.key === \"Tab\") {\n                    _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay div.search-container input\").focus();\n                }\n                if (event.key === \"Enter\") {\n                    this.click();\n                }\n            });\n\n            searchUl.appendChild(li);\n        }\n    }\n\n    function createDeleteButton(optKey, optValue, optGroup, disabled) {\n\n        const afterDelete = new CustomEvent(\"removed.bs.bootstrap-nice-select\", {\n            detail: {\n                key: optKey,\n                value: optValue\n            }\n        });\n\n        let deleteButton = function () {\n\n            let divWrapper = document.createElement(\"div\");\n            divWrapper.classList.add(...Constants.CONSTANTS.classes.deleteButtonWrapper);\n\n            let optValueElement = document.createElement(\"p\");\n            optValueElement.classList.add(...Constants.CONSTANTS.classes.deleteButtonText);\n            optValueElement.innerText = optValue;\n            divWrapper.appendChild(optValueElement);\n\n            let button = document.createElement(\"button\");\n            button.classList.add(...Constants.CONSTANTS.classes.deleteButton);\n            button.setAttribute(\"type\", \"button\");\n            button.setAttribute(\"data-id\", optKey);\n            if (disabled || _bootstrapNiceSelect.disabled) {\n                button.setAttribute(\"disabled\", \"disabled\");\n            }\n            let icon = document.createElement(\"span\");\n            icon.classList.add(...Constants.CONSTANTS.classes.deleteButtonIcon);\n            icon.insertAdjacentHTML(\"beforeend\", _bootstrapNiceSelect.icons && _bootstrapNiceSelect.icons.delete ? _bootstrapNiceSelect.icons.delete : Constants.ICONS[_bootstrapNiceSelect.theme].delete);\n            button.appendChild(icon);\n            divWrapper.appendChild(button);\n\n            button.addEventListener(\"click\", function () {\n                _selectField.querySelector(`option[value=\"${this.getAttribute(\"data-id\")}\"]`).removeAttribute(\"selected\");\n                if (this.parentElement.parentElement.previousElementSibling && this.parentElement.parentElement.previousElementSibling.tagName.toUpperCase() === \"H5\" && (this.parentElement.parentElement.nextElementSibling && this.parentElement.parentElement.nextElementSibling.tagName.toUpperCase() === \"H5\" || !this.parentElement.parentElement.nextElementSibling)) {\n                    this.parentElement.parentElement.previousElementSibling.remove();\n                }\n                this.parentElement.parentElement.remove();\n                if (!_bootstrapNiceSelect.multiple && _selectField.nextElementSibling.querySelectorAll(\".bootstrap-nice-select ul.delete-list li\").length === 0) {\n                    _selectField.selectedIndex = \"-1\";\n                }\n                if (_bootstrapNiceSelect.searchData === undefined) {\n                    if (optGroup) {\n                        _searchData.items.push({\n                            id: optKey,\n                            text: optValue,\n                            optGroup: optGroup,\n                            disabled: disabled\n                        });\n                    } else {\n                        _searchData.items.push({\n                            id: optKey,\n                            text: optValue,\n                            disabled: disabled\n                        });\n                    }\n                }\n                _selectField.dispatchEvent(afterDelete);\n            });\n            return divWrapper;\n        }\n\n        let liElement = document.createElement(\"li\");\n        liElement.classList.add(\"list-group-item\");\n        liElement.appendChild(deleteButton());\n        return liElement;\n    }\n\n    function initDeleteField() {\n\n        let optGroupsAvailable = function () {\n            for (let optGroup of optGroups) {\n                let headerElement = document.createElement(\"h5\");\n                headerElement.classList.add(...Constants.CONSTANTS.classes.deleteContainerHeader);\n                headerElement.innerHTML = optGroup.label;\n                headerElement.setAttribute(\"data-optgroup\", optGroup.label);\n                ulElement.appendChild(headerElement);\n                for (let optionElement of optGroup.children) {\n                    if (optionElement.selected) {\n                        ulElement.appendChild(createDeleteButton(optionElement.value, optionElement.innerText, optGroup.label, optionElement.disabled));\n                    } else {\n                        if (_bootstrapNiceSelect.searchData === undefined) {\n                            _searchData.items.push({\n                                id: optionElement.value,\n                                text: optionElement.innerText,\n                                optGroup: optGroup.label,\n                                disabled: optionElement.disabled\n                            });\n                        }\n                    }\n                }\n            }\n        }\n\n        let optGroupsNotAvailable = function () {\n            for (let optionElement of _selectField.children) {\n                if (optionElement.selected) {\n                    ulElement.appendChild(createDeleteButton(optionElement.value, optionElement.innerText, undefined, optionElement.disabled));\n                } else {\n                    if (_bootstrapNiceSelect.searchData === undefined) {\n                        _searchData.items.push({\n                            id: optionElement.value,\n                            text: optionElement.innerText,\n                            disabled: optionElement.disabled\n                        });\n                    }\n                }\n            }\n        }\n\n        let ulElement = document.createElement(\"ul\");\n        ulElement.classList.add(...Constants.CONSTANTS.classes.deleteContainerList);\n        if (_bootstrapNiceSelect.scrollable.on) {\n            ulElement.classList.add(\"scrollable\");\n            console.log(_bootstrapNiceSelect.scrollable.height);\n            ulElement.style.height = _bootstrapNiceSelect.scrollable.height;\n        }\n        let optGroups = _selectField.getElementsByTagName(\"optgroup\");\n        if (optGroups.length !== 0) {\n            optGroupsAvailable();\n        } else {\n            optGroupsNotAvailable();\n        }\n        return ulElement;\n    }\n\n    function initAddField() {\n        let divWrapper = document.createElement(\"div\");\n        divWrapper.classList.add(...Constants.CONSTANTS.classes.addContainerWrapper);\n\n        let button = document.createElement(\"button\");\n        button.classList.add(...Constants.CONSTANTS.classes.addButton);\n        button.setAttribute(\"type\", \"button\");\n        if (_bootstrapNiceSelect.disabled) {\n            button.setAttribute(\"disabled\", \"disabled\");\n        }\n        button.addEventListener(\"click\", function () {\n            _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay\").classList.add(\"active\");\n\n            let input = _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay div.search-container input\");\n            input.value = '';\n            input.focus();\n\n            refreshSearchList();\n        });\n        let icon = document.createElement(\"span\");\n        icon.classList.add(...Constants.CONSTANTS.classes.addbuttonIcon);\n        icon.insertAdjacentHTML(\"beforeend\", _bootstrapNiceSelect.icons && _bootstrapNiceSelect.icons.add ? _bootstrapNiceSelect.icons.add : Constants.ICONS[_bootstrapNiceSelect.theme].add);\n        button.appendChild(icon);\n\n        divWrapper.appendChild(button);\n        return divWrapper;\n    }\n\n    function initOverlay() {\n\n        function initSearchList() {\n            let ul = document.createElement(\"ul\");\n            ul.classList.add(\"list-group\");\n            return ul;\n        }\n\n        let hideOverlayOnClick = function (event) {\n            let target = (event && event.target);\n            if (target == this) {\n                overlayElement.classList.remove(\"active\");\n                _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay div.search-container ul\").classList.remove(\"active\");\n            }\n        }\n\n        let filterOnSearchInput = function () {\n            if (_bootstrapNiceSelect.searchData === undefined) {\n                let filter = this.value.toUpperCase();\n                if (filter.length > 0) {\n                    _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay div.search-container ul\").classList.add(\"active\");\n                } else {\n                    _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay div.search-container ul\").classList.remove(\"active\");\n                    return;\n                }\n                let liNodes = _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay div.search-container ul\").getElementsByTagName(\"li\");\n                for (let i = 0; i < liNodes.length; i++) {\n                    let txtValue = liNodes[i].textContent || liNodes[i].innerText;\n                    if (txtValue.toUpperCase().indexOf(filter) > -1) {\n                        liNodes[i].classList.remove(\"hidden\");\n                    } else {\n                        liNodes[i].classList.add(\"hidden\");\n                    }\n                }\n            } else {\n                let filter = this.value;\n                if (filter.length <= 0) {\n                    _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay div.search-container ul\").classList.remove(\"active\");\n                    return;\n                }\n                _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay div.search-container ul\").classList.add(\"active\");\n                getRemoteSearchData(filter);\n                refreshSearchList();\n            }\n        }\n\n        let keyboardInteraction = function (event) {\n\n            let allowTagsInputInteraction = function (keyValue) {\n                if (_bootstrapNiceSelect.tokenSeparators.includes(event.key)) {\n                    let optionAlreadyCreatedBefore = _selectField.querySelector(`option[value=\"${keyValue}\"]`);\n                    if (optionAlreadyCreatedBefore) {\n                        optionAlreadyCreatedBefore.setAttribute(\"selected\", \"selected\");\n                    } else {\n                        let newOption = document.createElement(\"option\");\n                        newOption.value = keyValue;\n                        newOption.innerText = keyValue;\n                        newOption.setAttribute(\"selected\", \"selected\");\n                        _selectField.appendChild(newOption);\n                    }\n                    if (!_selectField.nextElementSibling.querySelector(`.bootstrap-nice-select ul.delete-list button[data-id=${keyValue}]`)) {\n                        let newDeleteButton = createDeleteButton(keyValue, keyValue, undefined, false);\n                        _selectField.nextElementSibling.querySelector('.bootstrap-nice-select ul.delete-list').appendChild(newDeleteButton);\n                    }\n                    _selectField.nextElementSibling.querySelector('.bootstrap-nice-select-overlay').classList.remove(\"active\");\n                    _selectField.nextElementSibling.querySelector('.bootstrap-nice-select-overlay div.search-container ul').classList.remove(\"active\");\n                }\n            }\n\n            if (_bootstrapNiceSelect.searchData === undefined) {\n                if (event.key === \"Tab\") {\n                    event.preventDefault();\n                    let liElements = _selectField.nextElementSibling.querySelectorAll(\".bootstrap-nice-select-overlay div.search-container ul li:not(.hidden)\");\n                    if (liElements.length > 0) {\n                        liElements.forEach(element => element.tabIndex = -1);\n                        liElements[0].tabIndex = 0;\n                        _currentLi = 0;\n                        liElements[0].focus();\n                    }\n                };\n            } else {\n                if (event.key === \"Tab\") {\n                    event.preventDefault();\n                    let liElements = _selectField.nextElementSibling.querySelectorAll(\".bootstrap-nice-select-overlay div.search-container ul li\");\n                    if (liElements.length > 0) {\n                        liElements[0].tabIndex = 0;\n                        _currentLi = 0;\n                        liElements[0].focus();\n                    }\n                }\n            }\n            if (_bootstrapNiceSelect.tags) {\n                allowTagsInputInteraction(this.value.trim());\n            }\n        }\n\n        let overlayElement = document.createElement(\"div\");\n        overlayElement.classList.add(...Constants.CONSTANTS.classes.overlayContainer);\n\n        let divWrapper = document.createElement(\"div\");\n        divWrapper.classList.add(...Constants.CONSTANTS.classes.overlayContainerWrapper);\n        divWrapper.addEventListener(\"click\", hideOverlayOnClick);\n\n        let search = document.createElement(\"div\");\n        search.classList.add(...Constants.CONSTANTS.classes.searchContainer);\n\n        let searchInputWrapper = document.createElement(\"div\");\n        searchInputWrapper.classList.add(...Constants.CONSTANTS.classes.searchInputWrapper);\n        let searchIcon = document.createElement(\"span\");\n        searchIcon.classList.add(...Constants.CONSTANTS.classes.searchIcon);\n        searchIcon.insertAdjacentHTML(\"beforeend\", _bootstrapNiceSelect.icons && _bootstrapNiceSelect.icons.search ? _bootstrapNiceSelect.icons.search : Constants.ICONS[_bootstrapNiceSelect.theme].search);\n        let searchInput = document.createElement(\"input\");\n        searchInput.classList.add(\"w-100\");\n        searchInput.setAttribute(\"placeholder\", Constants.LOCALISATION[_bootstrapNiceSelect.locale].formatSearch());\n        searchInput.addEventListener(\"keyup\", filterOnSearchInput);\n        searchInput.addEventListener('keydown', keyboardInteraction);\n        searchInput.addEventListener(\"focusin\", function () {\n            _selectField.nextElementSibling.querySelector('div.search-container span.focus-border').classList.add(\"active\");\n        });\n        searchInput.addEventListener(\"focusout\", function () {\n            _selectField.nextElementSibling.querySelector('div.search-container span.focus-border').classList.remove(\"active\");\n        });\n        searchInputWrapper.appendChild(searchIcon);\n        searchInputWrapper.appendChild(searchInput);\n        if (_bootstrapNiceSelect.tags) {\n            let tagIcon = document.createElement(\"span\");\n            tagIcon.classList.add(...Constants.CONSTANTS.classes.tagIcon);\n            tagIcon.insertAdjacentHTML(\"beforeend\", _bootstrapNiceSelect.icons && _bootstrapNiceSelect.icons.tag ? _bootstrapNiceSelect.icons.tag : Constants.ICONS[_bootstrapNiceSelect.theme].tag);\n            let tooltip = document.createElement(\"span\");\n            tooltip.classList.add(\"tooltip-own\");\n            tagIcon.appendChild(tooltip);\n            tooltip.innerText = Constants.LOCALISATION[_bootstrapNiceSelect.locale].formatHelpForTagging();\n            searchInputWrapper.appendChild(tagIcon);\n        }\n        search.appendChild(searchInputWrapper);\n        let focusHr = document.createElement(\"span\");\n        focusHr.classList.add(...Constants.CONSTANTS.classes.searchHrFocus);\n        search.appendChild(focusHr);\n        let hr = document.createElement(\"span\");\n        hr.classList.add(...Constants.CONSTANTS.classes.searchHr);\n        search.appendChild(hr);\n        search.appendChild(initSearchList());\n        divWrapper.appendChild(search);\n        overlayElement.appendChild(divWrapper);\n        return overlayElement;\n    }\n\n    let syncViaHtml = function () {\n        if (_selectField.getAttribute(\"disabled\")) {\n            _bootstrapNiceSelect.disabled = true;\n        }\n        if (_selectField.getAttribute('multiple')) {\n            _bootstrapNiceSelect.multiple = true;\n        } else {\n            _bootstrapNiceSelect.multiple = false;\n            if (!_selectField.querySelector('option[selected=\"selected\"]')) {\n                _selectField.selectedIndex = \"-1\";\n                for (let option of _selectField) {\n                    option.selected = false;\n                }\n            }\n        }\n        if (_selectField.getAttribute('data-tags')) {\n            _bootstrapNiceSelect.tags = (_selectField.getAttribute('data-tags') === 'true');\n        }\n        if (_selectField.getAttribute(\"data-locale\")) {\n            _bootstrapNiceSelect.locale = _selectField.getAttribute(\"data-locale\");\n        }\n        if (_selectField.getAttribute(\"data-search-data\")) {\n            _bootstrapNiceSelect.locale = _selectField.getAttribute(\"data-search-data\");\n        }\n        if (_selectField.getAttribute(\"data-theme\")) {\n            _bootstrapNiceSelect.theme = _selectField.getAttribute(\"data-theme\");\n        }\n        if (_selectField.getAttribute(\"data-scrollable-on\")) {\n            _bootstrapNiceSelect.scrollable.on = (_selectField.getAttribute(\"data-scrollable-on\") === 'true');\n            _bootstrapNiceSelect.scrollable.height = _selectField.getAttribute(\"data-scrollable-height\");\n        }\n        if (_selectField.getAttribute(\"data-animation\")) {\n            _bootstrapNiceSelect.animation = (_selectField.getAttribute(\"data-animation\") === 'true');\n        }\n    }\n\n    let syncViaJavascript = function () {\n        if (options) {\n            for (let [key, value] of Object.entries(options)) {\n                _bootstrapNiceSelect[key] = value;\n            }\n        }\n    }\n\n    /* \n     *\n     * ####################\n     * ####    START   ####\n     * ####################\n     * \n     */\n\n\n    // private params, which should be not accessible via the public object\n    let _selectField = document.querySelector(selector);\n    _selectField.setAttribute(\"hidden\", \"hidden\");\n    let _currentLi = 0;\n    let _searchData = {\n        items: []\n    };\n\n    const _bootstrapNiceSelect = Object.create(DEFAULTS);\n\n    // sync options\n    syncViaHtml();\n    syncViaJavascript();\n\n    // init HTMLElement and inject it to DOM\n    let main = document.createElement(\"div\");\n    main.classList.add(...Constants.CONSTANTS.classes.mainContainer);\n    let deleteElement = initDeleteField();\n    let addElement = initAddField();\n\n    let addCol = document.createElement(\"div\");\n    addCol.classList.add(...Constants.CONSTANTS.classes.addContainer);\n    addCol.appendChild(addElement);\n\n    let deleteCol = document.createElement(\"div\");\n    deleteCol.classList.add(...Constants.CONSTANTS.classes.deleteContainer);\n    deleteCol.appendChild(deleteElement);\n\n    main.appendChild(addCol);\n    main.appendChild(deleteCol);\n    main.appendChild(initOverlay());\n\n    _selectField.parentNode.insertBefore(main, _selectField.nextSibling);\n\n    // Add programmatic control\n    _bootstrapNiceSelect.bootstrapNiceSelect = function (functionName, ...args) {\n        switch (functionName) {\n            case 'select':\n                if (args.length === 0) {\n                    console.error(\"No given option to select something for method 'select'. Please read the manual how to use the function...\");\n                    break;\n                }\n                for (let arg of args) {\n                    const afterAdd = new CustomEvent(\"inserted.bs.bootstrap-nice-select\", {\n                        detail: {\n                            key: arg.id,\n                            value: arg.text\n                        }\n                    });\n                    if (!_bootstrapNiceSelect.multiple) {\n                        let deleteLiElements = _selectField.nextElementSibling.querySelector('.bootstrap-nice-select ul.delete-list').getElementsByTagName(\"li\");\n                        for (let i = 0; (li = deleteLiElements[i]); i++) {\n                            li.parentNode.removeChild(li);\n                        }\n                        let oldSelectedOption = _selectField.querySelector('option[selected=\"selected\"]');\n                        if (oldSelectedOption) {\n                            oldSelectedOption.removeAttribute(\"selected\");\n                        }\n                    }\n                    let option = _selectField.querySelector(`option[value=\"${arg.id}\"]`);\n                    if (option) {\n                        option.setAttribute(\"selected\", \"selected\");\n                    } else {\n                        let newOption = document.createElement(\"option\");\n                        newOption.value = arg.id;\n                        newOption.innerText = arg.text;\n                        newOption.setAttribute(\"selected\", \"selected\");\n                        _selectField.appendChild(newOption);\n                    }\n                    if (_selectField.nextElementSibling.querySelector(`.bootstrap-nice-select ul.delete-list button[data-id=${arg.id}]`)) {\n                        continue;\n                    }\n                    if (arg.optGroup) {\n                        let deleteButton = createDeleteButton(arg.id, arg.text, arg.optGroup, (arg.disabled) ? arg.disabled : false);\n                        let selectedHeader = _selectField.nextElementSibling.querySelector(`.bootstrap-nice-select ul.delete-list h5[data-optgroup=${arg.optGroup}]`);\n                        if (selectedHeader) {\n                            selectedHeader.insertAdjacentElement('afterend', deleteButton);\n                        } else {\n                            let newHeader = document.createElement(\"h5\");\n                            newHeader.classList.add(...Constants.CONSTANTS.classes.deleteContainerHeader);\n                            newHeader.innerHTML = arg.optGroup;\n                            newHeader.setAttribute(\"data-optgroup\", arg.optGroup);\n                            _selectField.nextElementSibling.querySelector('.bootstrap-nice-select ul.delete-list').appendChild(newHeader);\n                            _selectField.nextElementSibling.querySelector('.bootstrap-nice-select ul.delete-list').appendChild(deleteButton);\n                        }\n                    } else {\n                        let deleteButton = createDeleteButton(arg.id, arg.text, undefined, (arg.disabled) ? arg.disabled : false);\n                        _selectField.nextElementSibling.querySelector('.bootstrap-nice-select ul.delete-list').appendChild(deleteButton);\n                    }\n                    _selectField.dispatchEvent(afterAdd);\n                }\n                break;\n            case 'deselect':\n                if (args.length === 0) {\n                    console.error(\"No given option to deselect something for method 'deselect'. Please read the manual how to use the function...\");\n                    break;\n                }\n                for (let arg of args) {\n                    let foundedButton = _selectField.nextElementSibling.querySelector(`.bootstrap-nice-select ul.delete-list li button[data-id=\"${arg}\"]`);\n                    if (!foundedButton) {\n                        console.error(`Could not deselect given option \"${arg}\", because could not trigger click event for respective delete button...`);\n                        continue;\n                    }\n                    foundedButton.click();\n                }\n                break;\n            case 'selectAll':\n                if (!_bootstrapNiceSelect.multiple) {\n                    console.error(\"Method 'selectAll' should not be used for a select field without 'multiple' property because it does not make sense if you can only select one. Please use method 'select' instead...\");\n                    break;\n                }\n                if (_bootstrapNiceSelect.searchData) {\n                    args.length > 0 ? getRemoteSearchData(args[0]) : getRemoteSearchData(\"\");\n                }\n                for (let searchOption of _searchData.items) {\n                    const afterAdd = new CustomEvent(\"inserted.bs.bootstrap-nice-select\", {\n                        detail: {\n                            key: searchOption.id,\n                            value: searchOption.text\n                        }\n                    });\n                    let option = _selectField.querySelector(`option[value=\"${searchOption.id}\"]`);\n                    if (option) {\n                        option.setAttribute(\"selected\", \"selected\");\n                    } else {\n                        let newOption = document.createElement(\"option\");\n                        newOption.value = searchOption.id;\n                        newOption.innerText = searchOption.text;\n                        newOption.setAttribute(\"selected\", \"selected\");\n                        _selectField.appendChild(newOption);\n                    }\n                    if (_bootstrapNiceSelect.searchData === undefined) {\n                        _searchData.items = _searchData.items.filter(data => data.id !== searchOption.id);\n                    }\n                    if (_selectField.nextElementSibling.querySelector(`.bootstrap-nice-select ul.delete-list button[data-id=${searchOption.id}]`)) {\n                        continue;\n                    }\n                    if (searchOption.optGroup) {\n                        let deleteButton = createDeleteButton(searchOption.id, searchOption.text, searchOption.optGroup, (searchOption.disabled) ? searchOption.disabled : false);\n                        let selectedHeader = _selectField.nextElementSibling.querySelector(`.bootstrap-nice-select ul.delete-list h5[data-optgroup=${searchOption.optGroup}]`);\n                        if (selectedHeader) {\n                            selectedHeader.insertAdjacentElement('afterend', deleteButton);\n                        } else {\n                            let newHeader = document.createElement(\"h5\");\n                            newHeader.classList.add(...Constants.CONSTANTS.classes.deleteContainerHeader);\n                            newHeader.innerHTML = searchOption.optGroup;\n                            newHeader.setAttribute(\"data-optgroup\", searchOption.optGroup);\n                            _selectField.nextElementSibling.querySelector('.bootstrap-nice-select ul.delete-list').appendChild(newHeader);\n                            _selectField.nextElementSibling.querySelector('.bootstrap-nice-select ul.delete-list').appendChild(deleteButton);\n                        }\n                    } else {\n                        let deleteButton = createDeleteButton(searchOption.id, searchOption.text, undefined, (searchOption.disabled) ? searchOption.disabled : false);\n                        _selectField.nextElementSibling.querySelector('.bootstrap-nice-select ul.delete-list').appendChild(deleteButton);\n                    }\n                    _selectField.dispatchEvent(afterAdd);\n                }\n                break;\n            case 'deselectAll':\n                let foundedButtons = _selectField.nextElementSibling.querySelectorAll(\".bootstrap-nice-select ul.delete-list li button\");\n                for (let foundedButton of foundedButtons) {\n                    foundedButton.click();\n                }\n                break;\n            case 'destroy':\n                _selectField.nextElementSibling.remove();\n                _selectField.removeAttribute(\"hidden\");\n                break;\n            case 'show':\n                if (_bootstrapNiceSelect.animation) {\n                    _selectField.nextElementSibling.classList.remove(\"fade-out-down\");\n                    _selectField.nextElementSibling.classList.add(\"fade-in-down\");\n                } else {\n                    _selectField.nextElementSibling.style.opacity = \"1\";\n                }\n                break;\n            case 'hide':\n                if (_bootstrapNiceSelect.animation) {\n                    _selectField.nextElementSibling.classList.remove(\"fade-in-down\");\n                    _selectField.nextElementSibling.classList.add(\"fade-out-down\");\n                } else {\n                    _selectField.nextElementSibling.style.opacity = \"0\";\n                }\n                break;\n            case 'open':\n                _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay\").classList.add(\"active\");\n                let input = _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay div.search-container input\");\n                if (args.length > 0) {\n                    input.value = args[0];\n                    input.dispatchEvent(new Event('keyup'));\n                } else {\n                    input.value = '';\n                }\n                input.focus();\n                refreshSearchList();\n                break;\n            case 'close':\n                _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay\").classList.remove(\"active\");\n                _selectField.nextElementSibling.querySelector(\".bootstrap-nice-select-overlay div.search-container ul\").classList.remove(\"active\");\n                break;\n        }\n    };\n\n    return _bootstrapNiceSelect;\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", function () {\n    let selectsToInit = document.querySelectorAll('select[data-bs-toggle=\"bootstrap-nice-select\"]');\n    if (selectsToInit.length === 0) {\n        selectsToInit = document.querySelectorAll('select[data-toggle=\"bootstrap-nice-select\"]')\n    }\n    for (let i = 0; i < selectsToInit.length; i++) {\n        selectsToInit[i].classList.add(`bootstrap-nice-select-element-${i}`);\n        BootstrapNiceSelect(`.bootstrap-nice-select-element-${i}`);\n    }\n});"],"names":[],"sourceRoot":""}